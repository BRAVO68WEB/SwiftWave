# swiftwave should be stack name
version: '3'
services:
  server:
    image: "swiftwave_server:latest"
    volumes:
      - /home/ubuntu/app/backup:/data
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.swiftwave_controlplane_node==true
    ports:
      - target: 3333
        published: 3333
        protocol: tcp
        mode: ingress
    dns:
      - "127.0.0.11"
    environment:
      - PORT=3333
      - CODE_TARBALL_DIR=/data/tarball
      - SWARM_NETWORK=swiftwave_swarm_network
      - HAPROXY_SERVICE_NAME=swiftwave_haproxy
      - DATABASE_TYPE=sqlite
      - SQLITE_DATABASE=gorm.db
      - POSTGRESQL_URI=
      - REDIS_ADDRESS=swiftwave_redis:6379
      - REDIS_PASSWORD=
      - ACCOUNT_EMAIL_ID=tanmoysrt@gmail.com
      - ACCOUNT_PRIVATE_KEY_FILE_PATH=/data/account_private_key.key
      - HAPROXY_MANAGER_HOST=swiftwave_haproxy
      - HAPROXY_MANAGER_PORT=5555
      - HAPROXY_MANAGER_USERNAME=admin
      - HAPROXY_MANAGER_PASSWORD=mypassword
      - DOCKER_HOST=unix:///var/run/docker.sock
    depends_on:
      - haproxy
      - redis
    networks:
      - controlplane_network
  haproxy:
    image: "haproxytech/haproxy-debian:2.9"
    volumes:
      - /home/ubuntu/app/haproxy:/usr/local/etc/haproxy
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.swiftwave_controlplane_node==true
    networks:
      - swarm_network
      - controlplane_network
  redis:
    image: "redis:alpine"
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.swiftwave_controlplane_node==true
    networks:
      - controlplane_network
networks:
  swarm_network:
    driver: overlay
    attachable: true
  controlplane_network:
    driver: overlay
    internal: true
    attachable: false